{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "name": {
            "defaultValue": "wabkp",
            "type": "String"
        },
        "virtualNetwork": {
            "type": "String"
        },
        "webappoutboundiplist": {
            "type": "string"
        },
        "baseTime": {
            "type": "string",
            "defaultValue": "[utcNow('u')]"
        }
    },
    "variables": {
        "outboundips": "[split(parameters('webappoutboundiplist'), ',')]",
        
        "serviceSasFunctionValues1": {
            "canonicalizedResource": "[concat('/blob/', parameters('name'), '/', 'webapp1')]",
            "signedResource": "c",
            "signedPermission": "racwdlup",
            "signedExpiry": "[dateTimeAdd(parameters('baseTime'), 'P3Y')]"
        },
        "serviceSasFunctionValues2": {
            "canonicalizedResource": "[concat('/blob/', parameters('name'), '/', 'webapp2')]",
            "signedResource": "c",
            "signedPermission": "racwdlup",
            "signedExpiry": "[dateTimeAdd(parameters('baseTime'), 'P3Y')]"
        }

    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-06-01",
            "name": "[parameters('name')]",
            "location": "westeurope",
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "defaultToOAuthAuthentication": false,
                "allowCrossTenantReplication": true,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "allowSharedKeyAccess": true,
                "networkAcls": {
                    "resourceAccessRules": [],
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [
                        {
                            "id": "[concat(parameters('virtualNetwork'), '/subnets/default')]",
                            "action": "Allow",
                            "state": "Succeeded"
                        }
                    ],
                    "ipRules": [
                       {
                            "value": "[variables('outboundips')[copyIndex('outboundips')]]",
                            "action": "Allow",
                            "copy": {
                                "name": "ipRules",
                                "count": "[length(variables('outboundips'))]"
                            }
                        } 
                    ],
                    "defaultAction": "Deny"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
            ],
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "changeFeed": {
                    "enabled": false
                },
                "restorePolicy": {
                    "enabled": false
                },
                "containerDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                },
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                },
                "isVersioningEnabled": false
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('name'), '/default/webapp1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('name'), '/default/webapp2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        }
    ],
   "outputs": {
      "webapp1sas": {
          "type": "string",
          "value": "[listServiceSas(parameters('name'), '2018-02-01', variables('serviceSasFunctionValues1')).serviceSasToken]"
      },
      "webapp2sas": {
          "type": "string",
          "value": "[listServiceSas(parameters('name'), '2018-02-01', variables('serviceSasFunctionValues2')).serviceSasToken]"
      }
   }
}