{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.2",
    "metadata": {
    "comments": "This template was developed for demonstration purposes.",
    "author": "Mohit Sharma"
  },
    "parameters": {
    //Webapp Name prefix
    "Webapp Name prefix": {
      "type": "string",
      "defaultValue": "ghost-azure",
      "metadata": {
          "description": "The name will concatinated with unique with an ID to make 2 unique names"
        }
    },
    //First Webapp location
    "1st WebApp Location": {
      "type": "string",
      "allowedValues": [
        "West Europe",
        "North Europe"
      ],
      "defaultValue": "North Europe"
    },
    //Second Webapp location
    "2nd WebApp Location": {
      "type": "string",
      "allowedValues": [
        "West Europe",
        "North Europe"
      ],
      "defaultValue": "West Europe"
    },
    "Sku": {
      "type": "string",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Standard",
      "metadata": {
          "description": "This is common for both Webapps"
        }
    },
    "Worker Size": {
      "type": "string",
      "allowedValues": [
        "1",
        "2",
        "3"
      ],
      "defaultValue": "2",
      "metadata": {
          "description": "This is common for both Webapps"
        }
    },
    //Ghost email configuration
    "Email Service": {
      "type": "string",
      "allowedValues": [
        "Not configured",
        "Mailgun",
        "Gmail",
        "SendGrid"
      ],
      "defaultValue": "Not configured",
      "metadata": {
          "description": "Email service for Ghost engine"
        }
    },
    "Email Username": {
      "type": "string",
      "defaultValue": ""
    },
    "Email Password": {
      "type": "string",
      "defaultValue": ""
    },
    "Email From Address": {
      "type": "string",
      "defaultValue": ""
    },
    // Code repository details
    "repoUrl": {
      "type": "string",
      "defaultValue": "https://github.com/dashanan13/Ghost-Azure-public"
    },
    "branch": {
      "type": "string",
      "defaultValue": "master"
    }
  
  },
    
  "variables": {
    "skuMapping": "[if(equals(parameters('Sku'), 'Free'), 'F', if(equals(parameters('Sku'), 'Shared'), 'D', if(equals(parameters('Sku'), 'Basic'), 'B', if(equals(parameters('Sku'), 'Standard'), 'S', if(equals(parameters('sku'), 'Premium'), 'P', 'F')))))]",
    "sku": "[concat(variables('skuMapping'), parameters('Worker Size'))]",

    "frontdoorname": "[concat(parameters('Webapp Name prefix'), '-', uniqueString(resourceGroup().id))]",
    "uniquewebappname1" : "[concat(parameters('Webapp Name prefix'), '1-', uniqueString(resourceGroup().id))]",
    "uniquewebappname2" : "[concat(parameters('Webapp Name prefix'), '2-', uniqueString(resourceGroup().id))]",
    
    //"frontdooraddress": "[concat(parameters('Webapp Name prefix'), '-', uniqueString(resourceGroup().id), '.azurefd.net')]",
    "webapp1address": "[concat(variables('uniquewebappname1'), '.azurewebsites.net')]",
    "webapp2address": "[concat(variables('uniquewebappname2'), '.azurewebsites.net')]",
    
    "appInsightsName1": "[concat(variables('uniquewebappname1'), '-insights')]",
    "appInsightsName2": "[concat(variables('uniquewebappname2'), '-insights')]",

    "hostingPlanName1": "[concat(variables('uniquewebappname1'), '-plan')]",
    "hostingPlanName2": "[concat(variables('uniquewebappname2'), '-plan')]",

    "slotname": "staging",

    "frontdoorLocation": "global",

    "wafPolicyNameForFrontDoor": "wafPolicyForFrontDoor",

    "storagename": "[concat('wabkp', uniqueString(resourceGroup().id))]",

    "linkwaf": "https://raw.githubusercontent.com/dashanan13/Ghost-Azure-public/testing/templates/waf.json",
    "linkwebapp": "https://raw.githubusercontent.com/dashanan13/Ghost-Azure-public/testing/templates/webapp.json",
    "linknetwork": "https://raw.githubusercontent.com/dashanan13/Ghost-Azure-public/testing/templates/network.json",
    "linkweappslot": "https://raw.githubusercontent.com/dashanan13/Ghost-Azure-public/testing/templates/webslots.json",
    "linkappinsight": "https://raw.githubusercontent.com/dashanan13/Ghost-Azure-public/testing/templates/appinsight.json",
    "linkwebappplan": "https://raw.githubusercontent.com/dashanan13/Ghost-Azure-public/testing/templates/webappplan.json",
    "linkwebappipsec": "https://raw.githubusercontent.com/dashanan13/Ghost-Azure-public/testing/templates/webappipsec.json",
    "linkfrontdoor": "https://raw.githubusercontent.com/dashanan13/Ghost-Azure-public/testing/templates/frontdoorsetup.json",
    "linkstorageaccount": "https://raw.githubusercontent.com/dashanan13/Ghost-Azure-public/testing/templates/storageaccount.json"
  },

  "resources": [

    //Network to restrict access to Storage account
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "networksetup",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('linknetwork')]",
          "contentVersion": "1.0.0.0"
        }
      }
    },
    
    //Webapp plan 1
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "webappplan1",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('linkwebappplan')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "WebappPlanName": {"value": "[variables('hostingPlanName1')]"},
          "Location": {"value": "[parameters('1st WebApp Location')]"},
          "Sku": {"value": "[variables('sku')]"}
        }
      }
    },

    //Webapp plan 2
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "webappplan2",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('linkwebappplan')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "WebappPlanName": {"value": "[variables('hostingPlanName2')]"},
          "Location": {"value": "[parameters('2nd WebApp Location')]"},
          "Sku": {"value": "[variables('sku')]"}
        }
      }
    },

    //Webapp insight 1
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "webappinsight1",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('linkappinsight')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "WebappName": {"value": "[variables('uniquewebappname1')]"},
          "Location": {"value": "[parameters('1st WebApp Location')]"},
          "AppInsightsName": {"value": "[variables('appInsightsName1')]"}
        }
      }
    },

    //Webapp insight 2
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "webappinsight2",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('linkappinsight')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "WebappName": {"value": "[variables('uniquewebappname2')]"},
          "Location": {"value": "[parameters('2nd WebApp Location')]"},
          "AppInsightsName": {"value": "[variables('appInsightsName2')]"}
        }
      }
    },

    //Webapp 1
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "webapp1",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'webappplan1')]",
        "[resourceId('Microsoft.Resources/deployments', 'webappinsight1')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('linkwebapp')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "WebappName": {"value": "[variables('uniquewebappname1')]"},
          "serverFarmId": {"value": "[reference('webappplan1').outputs.serverFarmId.value]"},
          "Location": {"value": "[parameters('1st WebApp Location')]"},
          "Email Service": {"value": "[parameters('Email Service')]"},
          "Email Username": {"value": "[parameters('Email Username')]"},
          "Email Password": {"value": "[parameters('Email Password')]"},
          "Email From Address": {"value": "[parameters('Email From Address')]"},
          "RepoUrl": {"value": "[parameters('repoUrl')]"},
          "Branch": {"value": "[parameters('branch')]"},
          "AppInsightsInstrumentationKey": {"value": "[reference('webappinsight1').outputs.AppInsightsInstrumentationKey.value]"}
        }
      }
    },

    //Webapp 2
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "webapp2",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'webappplan2')]",
        "[resourceId('Microsoft.Resources/deployments', 'webappinsight2')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('linkwebapp')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "WebappName": {"value": "[variables('uniquewebappname2')]"},
          "serverFarmId": {"value": "[reference('webappplan2').outputs.serverFarmId.value]"},
          "Location": {"value": "[parameters('2nd WebApp Location')]"},
          "Email Service": {"value": "[parameters('Email Service')]"},
          "Email Username": {"value": "[parameters('Email Username')]"},
          "Email Password": {"value": "[parameters('Email Password')]"},
          "Email From Address": {"value": "[parameters('Email From Address')]"},
          "RepoUrl": {"value": "[parameters('repoUrl')]"},
          "Branch": {"value": "[parameters('branch')]"},
          "AppInsightsInstrumentationKey": {"value": "[reference('webappinsight2').outputs.AppInsightsInstrumentationKey.value]"}
        }
      }
    },

    //Webapp slot 1
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "webappslot1",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'webappplan1')]",
        "[resourceId('Microsoft.Resources/deployments', 'webappinsight1')]",
        "[resourceId('Microsoft.Resources/deployments', 'webapp1')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('linkweappslot')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "WebappName": {"value": "[reference('webapp1').outputs.WebappName.value]"},
          //"WebappName": {"value": "[variables('uniquewebappname1')]"},  // changing it back to get success in deployment
          "serverFarmId": {"value": "[reference('webappplan1').outputs.serverFarmId.value]"},
          "Name": {"value": "[variables('slotname')]"},
          "Location": {"value": "[parameters('1st WebApp Location')]"},
          "Email Service": {"value": "[parameters('Email Service')]"},
          "Email Username": {"value": "[parameters('Email Username')]"},
          "Email Password": {"value": "[parameters('Email Password')]"},
          "Email From Address": {"value": "[parameters('Email From Address')]"},
          "AppInsightsInstrumentationKey": {"value": "[reference('webappinsight1').outputs.AppInsightsInstrumentationKey.value]"}
        }
      }
    },

    //Webapp slot 2
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "webappslot2",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'webappplan2')]",
        "[resourceId('Microsoft.Resources/deployments', 'webappinsight2')]",
        "[resourceId('Microsoft.Resources/deployments', 'webapp2')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('linkweappslot')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "WebappName": {"value": "[reference('webapp2').outputs.WebappName.value]"},
          "serverFarmId": {"value": "[reference('webappplan2').outputs.serverFarmId.value]"},
          "Name": {"value": "[variables('slotname')]"},
          "Location": {"value": "[parameters('2nd WebApp Location')]"},
          "Email Service": {"value": "[parameters('Email Service')]"},
          "Email Username": {"value": "[parameters('Email Username')]"},
          "Email Password": {"value": "[parameters('Email Password')]"},
          "Email From Address": {"value": "[parameters('Email From Address')]"},
          "AppInsightsInstrumentationKey": {"value": "[reference('webappinsight2').outputs.AppInsightsInstrumentationKey.value]"}
        }
      }
    },

    //WAF
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "frontdoorwaf",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('linkwaf')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "Name": {"value": "[variables('wafPolicyNameForFrontDoor')]"},
          "Location": {"value": "[variables('frontdoorLocation')]"}
        }
      }
    },

    //Front door
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "frontdoor",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'frontdoorwaf')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('linkfrontdoor')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "Name": {"value": "[variables('frontdoorname')]"},
          "Location": {"value": "[variables('frontdoorLocation')]"},
          "Webapp1Address": {"value": "[variables('webapp1address')]"},
          "Webapp2Address": {"value": "[variables('webapp2address')]"},
          "WAFName": {"value": "[variables('wafPolicyNameForFrontDoor')]"}
        }
      }
    },

    //Storage account for backup
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "storageaccount",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'networksetup')]",
        "[resourceId('Microsoft.Resources/deployments', 'webapp1')]",
        "[resourceId('Microsoft.Resources/deployments', 'webapp2')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('linkstorageaccount')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "Name": {"value": "[variables('storagename')]"},
          "virtualNetwork": {"value": "[reference('networksetup').outputs.NetworkrefID.value]"},
          "webappoutboundiplist": {"value": "[concat(reference('webapp1').outputs.OutboundIPs.value, ',', reference('webapp2').outputs.OutboundIPs.value)]"}
        }
      }
    },

    //Update webapps with IP restriction that binds it to frontdoor
    //Update webapp 1
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "ipsecwebapp1",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'webapp1')]",
        "[resourceId('Microsoft.Resources/deployments', 'webappplan1')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('linkwebappipsec')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "WebappName": {"value": "[reference('webapp1').outputs.WebappName.value]"},
          "Frontdoorid": {"value": "[reference('frontdoor').outputs.frontdoorid.value]"},  // This value is passed from frontdoor as output after its creation and then used as input here to set IP restrictions
          "webappsas": {"value": "[concat('https://', variables('storagename'), '.blob.core.windows.net/webapp1', reference('storageaccount').outputs.webapp1sas.value)]"}
        }
      }
    },

    //Update webapp 2
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "ipsecwebapp2",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'webapp2')]",
        "[resourceId('Microsoft.Resources/deployments', 'webappplan2')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('linkwebappipsec')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "WebappName": {"value": "[reference('webapp2').outputs.WebappName.value]"},
          "Frontdoorid": {"value": "[reference('frontdoor').outputs.frontdoorid.value]"},
          "webappsas": {"value": "[concat('https://', variables('storagename'), '.blob.core.windows.net/webapp2', reference('storageaccount').outputs.webapp2sas.value)]"}
        }
      }
    }

  ],
  "outputs": {
    "frontdoorid": {
      "type": "string",
      "value": "[reference('frontdoor').outputs.frontdoorid.value]"
    },
    "webapp1iplist": {
      "type": "string",
      "value": "[reference('webapp1').outputs.OutboundIPs.value]"
    },
    "webapp2iplist": {
      "type": "string",
      "value": "[reference('webapp2').outputs.OutboundIPs.value]"
    },
    "networkid": {
      "type": "string",
      "value": "[reference('networksetup').outputs.NetworkrefID.value]"
    },
    "webapp1sas": {
      "type": "string",
      "value": "[concat('https://16jasa.blob.core.windows.net/webapp1', reference('storageaccount').outputs.webapp1sas.value)]"
    },
    "webapp2sas": {
      "type": "string",
      "value": "[concat('https://16jasa.blob.core.windows.net/webapp2', reference('storageaccount').outputs.webapp2sas.value)]"
    }

  }
}
